<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swb.web.dao.ReviewDao">

    <resultMap type="ReviewDto" id="reviewMap">
        <result column="review_id" property="reviewId"/>
        <result column="video_id" property="videoId"/>
        <result column="user_id" property="userId"/>
        <result column="category_id" property="categoryId"/>
        <result column="reg_date" property="regDate"/>
        <result column="view_cnt" property="viewCnt"/>
        <result column="like_cnt" property="likeCnt"/>
    </resultMap>

    <select id="selectOne" resultMap="reviewMap" parameterType="int">
        SELECT *
        FROM review
        WHERE review_id = #{reviewId}
    </select>

    <!-- CUD는 테이블이 변경됨 -> mybatis에서는 처리할 때 변경된 행의 개수를 반환한다.  -->
    <insert id="insertReview" parameterType="ReviewDto">
        INSERT INTO review (video_id, user_id, category_id, title, writer, contents)
        VALUES (#{videoId}, #{userId}, #{categoryId}, #{title}, #{writer}, #{contents})
    </insert>

    <delete id="deleteReview" parameterType="int">
        DELETE FROM review
        WHERE review_id = #{reviewId}
    </delete>

    <update id="updateReview" parameterType="ReviewDto">
        UPDATE review
        SET category_id = #{categoryId}, title = #{title}, contents= #{contents}
        WHERE review_id = #{reviewId}
    </update>

    <!-- 검색기능  -->
    <select id="search" resultMap="reviewMap" parameterType="SearchCondition">
        SELECT review_id, writer, title, view_cnt, like_cnt
        FROM review

        <!-- 검색 조건 (동적쿼리)-->
        <if test="categoryId > 1">
            WHERE category_id = ${categoryId}
        </if>
        <!--  WHERE 절에 무의미한(그러나 참인) 값을 넣어서 category가 있거나 없거나 들어갈 수 있도록 -->
        <if test="categoryId == 1">
            WHERE 1=1
        </if>
        <if test="videoId != 0">
            AND video_id = ${videoId}
        </if>
        <if test="key != 'none'">
            AND ${key} LIKE concat('%', #{word}, '%')
        </if>
        <!-- 어떤 기준으로 어떤 방향으로 정렬 -->
        <if test="orderBy != 'none'">
            ORDER BY ${orderBy} ${orderByDir}
        </if>
    </select>

    <!-- 조회수, 좋아요 증가   -->
    <update id="updateViewCnt" parameterType="int">
        UPDATE review
        SET view_cnt = view_cnt+1
        WHERE review_id = #{reviewId}
    </update>

    <update id="updateLikeCnt" parameterType="int">
        UPDATE review
        SET like_cnt = like_cnt+1
        WHERE review_id = #{reviewId}
    </update>

</mapper>